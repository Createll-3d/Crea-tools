import bpy
import math

"""
Objective/Purpose
    - used to disable certain constraints generated by metarig    

To Do
    - handle helper bones to be parented to "DEF-" bone instead of "ORG-" bone
        - if bone.parent.name.startswith(ORG-) -> parent to DEF version
    - more flexible with constraint transfer from existing metarig
        - or constraints from metarig still transfers to anim_rig
    - i think theres a bug with the symmetrize not mirroring sometimes
"""

# FUNCTION DEFINITIONS
        
def symmetrize():
    bpy.ops.object.mode_set(mode='POSE')
#    for bone in evaluated_bones:
#        bpy.data.objects[rig].data.bones[bone].select = True
    # change this ^^^^ to if name contains '.L.'
    bpy.ops.object.mode_set(mode='EDIT')
    bpy.ops.armature.symmetrize()
    bpy.ops.object.mode_set(mode='POSE')

def set_enable_helper_bone_deform():
    for bone in bpy.data.armatures['rig_anim'].bones:
        if 'helper' in bone.name:
            bone.use_deform = True

def set_enable_eyelid_LimDist(bool_enable):

    for bone in bpy.data.objects['rig_anim'].pose.bones:
        bone_object = bpy.data.objects['rig_anim'].data.bones[bone.name]
        if (bone_object.layers[1] or bone_object.layers[2] or bone_object.layers[3]) and 'lid.' in bone.name:
            try:
                bone.constraints['Limit Distance'].enabled = bool_enable
            except:
                None

def set_enable_eyelid_TrackCenter(bool_enable):

    for bone in bpy.data.objects['rig_anim'].pose.bones:
        bone_object = bpy.data.objects['rig_anim'].data.bones[bone.name]
        if bone_object.layers[30] and 'MCH-lid_handle_pre' in bone.name:
            try:
                bone.constraints['track_center'].enabled = bool_enable
            except:
                None


# START ------------------------------------------------------

# initialize name

try:
    bpy.data.objects['rig'].name = 'rig_anim'
    bpy.data.armatures['rig'].name = 'rig_anim'
except KeyError:
    None

try:
    bpy.data.armatures.remove(bpy.data.armatures['metarig.001'])
except KeyError:
    None


# DISABLE SPECIFIC RIGIFY FEATURES ----------------------------

# Initialize an empty list to store bones that meet the criteria

set_enable_eyelid_LimDist(False)
set_enable_eyelid_TrackCenter(False)
set_enable_helper_bone_deform()


# ADDITIONAL RIGIFY CONSTRAINTS -------------------------------

# VARIABLES
def set_bone_parent(key_name, parent_bone_name):
    armature = bpy.data.armatures['rig_anim']
    bpy.context.view_layer.objects.active = bpy.data.objects[armature.name]
    bpy.ops.object.mode_set(mode='EDIT')
    
    for bone in armature.edit_bones:
        if key_name in bone.name:
            if key_name + '.L' in bone.name:
                bone.parent = armature.edit_bones[parent_bone_name + '.L']
            else:
                bone.parent = armature.edit_bones[parent_bone_name + '.R']
    
    bpy.ops.object.mode_set(mode='POSE')

set_bone_parent('eye.adjust.helper', 'DEF-eye')
## INITIALIZE


    
